name: Build OpenThread nRF52840 Examples

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  dependabot:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    if: ${{ github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'}}
    steps:
      - id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --squash --auto "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  build:
    name: Build OpenThread nRF52840
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive

    # Step 2: Set up dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc-arm-none-eabi \
          make \
          cmake \
          git \
          libstdc++-arm-none-eabi-newlib \
          python3-pip
        pip3 install --upgrade pip
        pip3 install nrfutil

    # Step 3: Bootstrap the project
    - name: Bootstrap the project
      working-directory: ot-nrf528xx
      run: ./script/bootstrap

    # Step 4: Build UART version
    - name: Build nRF52840 UART Example
      working-directory: ot-nrf528xx
      run: ./script/build nrf52840 UART_trans

    # Step 5: Rename UART ELF and HEX files
    - name: Rename UART binaries
      working-directory: ot-nrf528xx
      run: |
        mv build/bin/ot-cli-ftd build/bin/ot-cli-ftd-UART
        arm-none-eabi-objcopy -O ihex build/bin/ot-cli-ftd-UART build/bin/ot-cli-ftd-UART.hex

    # Step 6: Build USB version
    - name: Build nRF52840 USB Example
      working-directory: ot-nrf528xx
      run: ./script/build nrf52840 USB_trans -DOT_BOOTLOADER=USB

    # Step 7: Rename USB ELF and HEX files
    - name: Rename USB binaries
      working-directory: ot-nrf528xx
      run: |
        mv build/bin/ot-cli-ftd build/bin/ot-cli-ftd-USB
        arm-none-eabi-objcopy -O ihex build/bin/ot-cli-ftd-USB build/bin/ot-cli-ftd-USB.hex
    
  # Step 8: Rename RCP ELF and HEX files
    - name: Rename RCP binaries
      working-directory: ot-nrf528xx
      run: |
        mv build/bin/ot-rcp build/bin/ot-rcp-USB
        arm-none-eabi-objcopy -O ihex build/bin/ot-rcp-USB build/bin/ot-rcp-USB.hex
        
    # Step 9: Upload artifacts
    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: ot-nrf528xx-binaries
        path: |
          ot-nrf528xx/build/bin/ot-cli-ftd-UART
          ot-nrf528xx/build/bin/ot-cli-ftd-UART.hex
          ot-nrf528xx/build/bin/ot-cli-ftd-USB
          ot-nrf528xx/build/bin/ot-cli-ftd-USB.hex
          ot-nrf528xx/build/bin/ot-rcp-USB
          ot-nrf528xx/build/bin/ot-rcp-USB.hex


